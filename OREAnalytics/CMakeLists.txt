cmake_minimum_required(VERSION 3.15)

project(OREAnalytics CXX)

enable_testing()

include("../cmake/writeAll.cmake")
include("../cmake/commonSettings.cmake")

get_library_name("OREAnalytics" OREA_LIB_NAME)
get_library_name("OREData" ORED_LIB_NAME)
get_library_name("QuantExt" QLE_LIB_NAME)
set_ql_library_name()

if(MSVC)
	add_compile_definitions(BOOST_IOSTREAMS_NO_LIB)
endif()

if(ORE_USE_ZLIB)
    find_package(ZLIB REQUIRED)
endif()

SET(COMPONENT_LIST date_time filesystem iostreams regex serialization system timer thread)
if (ORE_BUILD_TESTS)
    LIST(APPEND COMPONENT_LIST unit_test_framework)
endif()
if(MSVC AND ORE_USE_ZLIB)
    LIST(APPEND COMPONENT_LIST zlib)
endif()
find_package (Boost REQUIRED COMPONENTS ${COMPONENT_LIST} OPTIONAL_COMPONENTS chrono)
if (ORE_ENABLE_PARALLEL_UNIT_TEST_RUNNER AND UNIX AND NOT APPLE)
    find_library(RT_LIBRARY rt REQUIRED)
endif()

include_directories(${Boost_INCLUDE_DIRS})
include_directories(${QUANTLIB_SOURCE_DIR})
include_directories(${QUANTEXT_SOURCE_DIR})
include_directories(${OREDATA_SOURCE_DIR})
include_directories(${ORETEST_SOURCE_DIR})
include_directories(${RAPIDXML_SOURCE_DIR})
include_directories(${CMAKE_CURRENT_SOURCE_DIR})

add_link_directory_if_exists("${QUANTLIB_SOURCE_DIR}/build/ql")
add_link_directory_if_exists("${QUANTEXT_SOURCE_DIR}/build/qle")
add_link_directory_if_exists("${OREDATA_SOURCE_DIR}/build/ored")
add_link_directory_if_exists("${CMAKE_BINARY_DIR}/QuantLib/ql")
add_link_directory_if_exists("${CMAKE_BINARY_DIR}/QuantExt/qle")
add_link_directory_if_exists("${CMAKE_BINARY_DIR}/OREData/ored")

add_subdirectory("orea")
if (ORE_BUILD_DOC)
    add_subdirectory("doc")
endif()
if (ORE_BUILD_TESTS)
    add_subdirectory("test")
endif()
