ARG fedora_tag=40
FROM registry.fedoraproject.org/fedora:${fedora_tag} as orebuild

MAINTAINER Quaternion Risk Management
LABEL Description="Fedora-based multi-stage container definition for ORE"

ARG build_jobs=
ARG cmake_build_type=Release

# orebuild
COPY CMakeLists.txt /ore/CMakeLists.txt
COPY QuantLib /ore/QuantLib
COPY QuantExt /ore/QuantExt
COPY OREData /ore/OREData
COPY OREAnalytics /ore/OREAnalytics
COPY App /ore/App
COPY ThirdPartyLibs /ore/ThirdPartyLibs
COPY ORETest /ore/ORETest
COPY cmake /ore/cmake

# Install dependencies
RUN yum -q -y clean expire-cache && yum -q -y update && yum -q -y install \
    boost-devel \
    bzip2-devel \
    cmake \
    # Example_43 requires this https://github.com/OpenSourceRisk/Engine/issues/142
    eigen3-devel \
    gcc \
    gcc-c++ \
    glibc-devel \
    ninja-build \
    ocl-icd-devel \
    opencl-headers \
    zlib-ng-compat-devel

# set up the build
RUN cd / \
  && mkdir -p /ore/build && cd /ore/build \
  && cmake /ore -GNinja -DCMAKE_BUILD_TYPE=${cmake_build_type} -DORE_BUILD_DOC=OFF -DORE_USE_ZLIB=ON -DQL_BUILD_EXAMPLES=false -DQL_BUILD_TEST_SUITE=false -DQL_BUILD_BENCHMARK=false -DQL_ENABLE_SESSIONS=ON -DORE_ENABLE_OPENCL=ON

# build
RUN cd /ore/build \
  && cmake --build . -- -j${build_jobs:-$(nproc)} install

RUN ldconfig

# tests
RUN yum -q -y install python3-pip
RUN pip3 install \
    datacompy \
    jsondiff \
    lxml \
    matplotlib \
    pandas \
    # replaces python-nose which has trouble with Python 3.12+
    pynose \
    xmldiff

COPY Examples /ore/Examples
COPY Tools /ore/Tools

RUN cd /ore/build \
  # NOSE_PROCESSES=$(nproc) NOSE_PROCESS_TIMEOUT=600 nosetests --process-restartworker --process-timeout=600 run_examples_testsuite.py 
  && NOSE_PROCESSES=${build_jobs:-$(nproc)} NOSE_PROCESS_TIMEOUT=600 --test-dir . --output-junit Testing/ctest-junit.xml --timeout 3600

# ore application image
FROM registry.fedoraproject.org/fedora-minimal:${fedora_tag} as ore

# Ideally, we'd take a static binary from the first stage and just copy that in - this is arguably over-inclusive
COPY --from=orebuild /usr/local/include /usr/local/include
COPY --from=orebuild /usr/local/lib/ /usr/local/lib
COPY --from=orebuild /usr/local/bin/ /usr/local/bin
COPY --from=orebuild /ore/build /ore/build
COPY --from=orebuild /usr/lib64 /usr/lib64

RUN ldconfig

CMD /ore/build/App/ore