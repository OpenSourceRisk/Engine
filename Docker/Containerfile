ARG fedora_tag=40
FROM registry.fedoraproject.org/fedora:${fedora_tag} as orebuild

MAINTAINER Quaternion Risk Management
LABEL Description="Fedora-based multi-stage container definition for ORE"

ARG build_jobs=
ARG cmake_build_type=Release

# orebuild
COPY CMakeLists.txt /ore/CMakeLists.txt
COPY QuantLib /ore/QuantLib
COPY QuantExt /ore/QuantExt
COPY OREData /ore/OREData
COPY OREAnalytics /ore/OREAnalytics
COPY App /ore/App
COPY ThirdPartyLibs /ore/ThirdPartyLibs
COPY ORETest /ore/ORETest
COPY cmake /ore/cmake

# Install dependencies
# RUN yum -q -y clean expire-cache && yum -q -y update && yum -q -y install \
#     boost-devel \
#     bzip2-devel \
#     cmake \
#     # Example_43 requires this https://github.com/OpenSourceRisk/Engine/issues/142
#     eigen3-devel \
#     gcc \
#     gcc-c++ \
#     glibc-devel \
#     ninja-build \
#     ocl-icd-devel \
#     opencl-headers \
#     zlib-ng-compat-devel

# set up the build
# RUN cd / \
#   && mkdir -p /ore/build && cd /ore/build \
#   && cmake /ore -GNinja -DCMAKE_BUILD_TYPE=${cmake_build_type} -DORE_BUILD_DOC=OFF -DORE_USE_ZLIB=ON -DQL_BUILD_EXAMPLES=false -DQL_BUILD_TEST_SUITE=false -DQL_BUILD_BENCHMARK=false -DQL_ENABLE_SESSIONS=ON -DORE_ENABLE_OPENCL=ON

# build
# RUN cd /ore/build \
#   && cmake --build . -- -j${build_jobs:-$(nproc)} install

RUN ldconfig

# tests
# Set up the Python 3.9 venv so nose works.  Migration from nose seems needed
RUN yum -q -y install python3.9 python3-pip 
ENV VIRTUAL_ENV=/opt/python3.9-venv
RUN python3.9 -m venv $VIRTUAL_ENV
ENV PATH="$VIRTUAL_ENV/bin:$PATH"
# RUN pip3 install \
#     datacompy \
#     jsondiff \
#     lxml \
#     matplotlib \
#     pandas \
#     nose \
#     nose_xunitmp \
#     xmldiff

COPY Examples /ore/Examples
COPY Tools /ore/Tools

RUN mkdir -p /ore/test-results

# NOSE_PROCESS_RESTARTWORKER=true
# NOSE_PROCESSES=$(nproc) NOSE_PROCESS_TIMEOUT=600 NOSE_WITH_XUNITMP=true NOSE_XUNITMP_FILE=Testing/examples-xunit.xml nosetests run_examples_testsuite.py 
#RUN cd /ore/build \
#  && NOSE_PROCESSES=${build_jobs:-$(nproc)} NOSE_PROCESS_TIMEOUT=600 NOSE_WITH_XUNITMP=true NOSE_XUNITMP_FILE=/ore/test-results/examples.xml \
#    ctest -j${build_jobs:-$(nproc)} --test-dir . --output-junit /ore/test-results/ctest.xml --timeout 3600

# ore application image
FROM registry.fedoraproject.org/fedora-minimal:${fedora_tag} as ore

# Ideally, we'd take a static binary from the first stage and just copy that in - this is arguably over-inclusive
COPY --from=orebuild /usr/local/include /usr/local/include
COPY --from=orebuild /usr/local/lib/ /usr/local/lib
COPY --from=orebuild /usr/local/bin/ /usr/local/bin
COPY --from=orebuild /ore/build /ore/build
COPY --from=orebuild /usr/lib64 /usr/lib64

RUN ldconfig

CMD /ore/build/App/ore