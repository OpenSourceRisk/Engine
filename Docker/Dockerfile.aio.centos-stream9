ARG builder_base_image=quay.io/centos/centos:stream9
ARG release_base_image=quay.io/centos/centos:stream9-minimal

#
# builder image
#
FROM ${builder_base_image} AS builder

# the name of the Code Ready Builder repository (contains eigen3)
ARG code_ready_builder_repo=crb

# Set to override number of build jobs. Will default to number of cores available.
ARG build_jobs=
ARG cmake_build_type=Release

COPY CMakeLists.txt /ore/CMakeLists.txt
COPY QuantLib /ore/QuantLib
COPY QuantExt /ore/QuantExt
COPY OREData /ore/OREData
COPY OREAnalytics /ore/OREAnalytics
COPY App /ore/App
COPY ThirdPartyLibs /ore/ThirdPartyLibs
COPY ORETest /ore/ORETest
COPY cmake /ore/cmake

# Install dependencies
RUN yum -q -y clean expire-cache && yum -q -y update && yum -q -y --enablerepo=${code_ready_builder_repo} install \
    boost-devel \
    bzip2-devel \
    cmake \
    # Example_43 requires this https://github.com/OpenSourceRisk/Engine/issues/142
    eigen3-devel \
    gcc \
    gcc-c++ \
    glibc-devel \
    ninja-build \
    ocl-icd-devel \
    opencl-headers \
    zlib-devel

# set up the build
RUN cd / \
  && mkdir -p /ore/build && cd /ore/build \
  && cmake /ore -GNinja -DCMAKE_BUILD_TYPE=${cmake_build_type} -DORE_BUILD_DOC=OFF -DORE_USE_ZLIB=ON -DQL_BUILD_EXAMPLES=false -DQL_BUILD_TEST_SUITE=false -DQL_BUILD_BENCHMARK=false -DQL_ENABLE_SESSIONS=ON -DORE_ENABLE_OPENCL=ON

# build
RUN cd /ore/build \
  && cmake --build . -- -j${build_jobs:-$(nproc)} install

RUN ldconfig

# test facility
# Set up the Python 3.9 venv so nose works.  Migration from nose seems needed
RUN yum -q -y install python3.9 python3-pip 
ENV VIRTUAL_ENV=/opt/python3.9-venv
RUN python3.9 -m venv $VIRTUAL_ENV
ENV PATH="$VIRTUAL_ENV/bin:$PATH"
RUN pip3 install \
    datacompy \
    jsondiff \
    lxml \
    matplotlib \
    pandas \
    nose \
    nose_xunitmp \
    xmldiff

COPY Examples /ore/Examples
COPY Tools /ore/Tools

#
# release image
#
FROM ${release_base_image} AS release

LABEL org.opencontainers.image.authors="Quaternion Risk Management"
LABEL org.opencontainers.image.description="Open Source Risk Engine"

# libs to run
RUN microdnf install -y boost ocl-icd --nodocs && \
    microdnf clean all -y

# fetch built files from orebuild - we use a bind mount to allow us to copy library symlinks
RUN mkdir -p /ore/bin /ore/lib
RUN --mount=type=bind,from=builder,source=/usr/local,target=/orebuild cp -a /orebuild/bin/ore /ore/bin && cp -a /orebuild/lib/lib*.so* /ore/lib

# tell the linker where the libraries are, as the relative directories are no longer valid
ENV LD_LIBRARY_PATH=/ore/lib
# ensure ore is on the PATH so that if a interactive terminal is used, it's easily findable
ENV PATH=/ore/bin:$PATH
#Â Adjust the locale so 1,000 comma separators are suppressed
ENV LC_NUMERIC=C

CMD /ore/bin/ore